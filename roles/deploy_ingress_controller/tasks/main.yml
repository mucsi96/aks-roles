- include_vars:
    file: "{{ inventory_dir }}/.azure/dns-challenge-application-secret.yml"

- name: Get AKS info
  delegate_to: localhost
  azure.azcollection.azure_rm_aks_info:
    name: "{{ azure_resource_group }}"
    resource_group: "{{ azure_resource_group }}"
  register: azure_aks_info

- set_fact:
    azure_node_resource_group: "{{ azure_aks_info.aks[0].node_resource_group }}"

- name: Get public IP
  delegate_to: localhost
  azure.azcollection.azure_rm_publicipaddress_info:
    resource_group: "{{ azure_node_resource_group }}"
    name: "{{ azure_resource_group }}"
  register: azure_public_ip_info

- set_fact:
    azure_public_ip: "{{ azure_public_ip_info.publicipaddresses[0].ip_address }}"

- name: Deploy Traefik
  kubernetes.core.helm:
    kubeconfig: "{{ k8s_admin_config_path }}"
    name: traefik
    chart_repo_url: https://traefik.github.io/charts
    chart_ref: traefik
    chart_version: "{{ traefik_chart_version }}"
    wait: true
    release_namespace: traefik
    create_namespace: true
    release_values:
      podSecurityContext:
        fsGroup: 65532
      persistence:
        enabled: true
        size: 128Mi
      certResolvers:
        letsencrypt:
          email: "{{ letsencrypt_email }}"
          caServer: https://acme-v02.api.letsencrypt.org/directory # Production server
          # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # Staging server
          dnsChallenge:
            provider: azuredns
            delayBeforeCheck: 5
          storage: /data/acme.json
      env:
        - name: AZURE_CLIENT_ID
          value: "{{ azure_dns_challenge_application_id }}"
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: azuredns-secret
              key: client-secret
        - name: AZURE_SUBSCRIPTION_ID
          value: "{{ azure_subscription_id }}"
        - name: AZURE_TENANT_ID
          value: "{{ azure_tenant_id }}"
        - name: AZURE_RESOURCE_GROUP
          value: "{{ azure_resource_group }}"
      deployment:
        initContainers:
          - name: volume-permissions
            image: busybox:latest
            command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
            volumeMounts:
            - mountPath: /data
              name: data
      logs:
        general:
          level: DEBUG
        access:
          enabled: true
      ports:
        web:
          redirectTo: 
            port: websecure
            scheme: https
        #   middlewares: traefik-ip-filter@kubernetescrd
        # websecure:
        #   middlewares: traefik-ip-filter@kubernetescrd
      service:
        spec:
          type: LoadBalancer
        annotations:
          service.beta.kubernetes.io/azure-load-balancer-resource-group: "{{ azure_node_resource_group }}"
          service.beta.kubernetes.io/azure-pip-name: "{{ azure_resource_group }}"
          service.beta.kubernetes.io/azure-dns-label-name: "{{ azure_resource_group }}"
          service.beta.kubernetes.io/azure-allowed-ip-ranges: "{{ ip_range | join(',') }}"
      extraObjects:
        - apiVersion: v1
          kind: Secret
          metadata:
            name: azuredns-secret
            namespace: traefik
          type: Opaque
          stringData:
            client-secret: "{{ azure_dns_challenge_application_secret }}"
      # - apiVersion: traefik.io/v1alpha1
      #   kind: Middleware
      #   metadata:
      #     name: ip-filter
      #   spec:
      #     ipAllowList:
      #       sourceRange: "{{ ip_range }}"

# - name: Get an existing Service object
#   kubernetes.core.k8s_info:
#     kubeconfig: "{{ k8s_admin_config_path }}"
#     kind: Service
#     namespace: traefik
#     label_selectors:
#       - app.kubernetes.io/name=traefik
#   register: web_service_info
#   until: web_service_info.resources[0].status.loadBalancer.ingress is iterable
#   delay: 3
#   retries: 30

- name: Get public DNS name
  delegate_to: localhost
  azure.azcollection.azure_rm_publicipaddress_info:
    resource_group: "{{ azure_node_resource_group }}"
    name: "{{ azure_resource_group }}"
  register: azure_public_ip_info
