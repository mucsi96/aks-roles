- name: Get AKS info
  delegate_to: localhost
  azure_rm_aks_info:
    name: "{{ azure_resource_group }}"
    resource_group: "{{ azure_resource_group }}"
  register: azure_aks_info

- set_fact:
    azure_node_resource_group: "{{ azure_aks_info.aks[0].node_resource_group }}"

- name: Get public IP
  delegate_to: localhost
  azure_rm_publicipaddress_info:
    resource_group: "{{ azure_node_resource_group }}"
    name: "{{ azure_resource_group }}"
  register: azure_public_ip_info

- set_fact:
    azure_public_ip: "{{ azure_public_ip_info.publicipaddresses[0].ip_address }}"

- name: Deploy Traeffik
  kubernetes.core.helm:
    kubeconfig: "{{ k8s_admin_config_path }}"
    name: traefik
    chart_repo_url: https://traefik.github.io/charts
    chart_ref: traefik
    chart_version: "{{ traefik_chart_version }}"
    wait: true
    release_namespace: traefik
    create_namespace: true
    release_values:
      # logs:
      #   general:
      #     level: DEBUG
      #   access:
      #     enabled: true
      ports:
        web:
          redirectTo: 
            port: websecure
            scheme: https
        #   middlewares: traefik-ip-filter@kubernetescrd
        # websecure:
        #   middlewares: traefik-ip-filter@kubernetescrd
      service:
        spec:
          type: LoadBalancer
        annotations:
          service.beta.kubernetes.io/azure-load-balancer-resource-group: "{{ azure_node_resource_group }}"
          service.beta.kubernetes.io/azure-pip-name: "{{ azure_resource_group }}"
          service.beta.kubernetes.io/azure-dns-label-name: "{{ azure_resource_group }}"
          service.beta.kubernetes.io/azure-allowed-ip-ranges: "{{ ip_range | join(',') }}"
      # extraObjects:
      # - apiVersion: traefik.io/v1alpha1
      #   kind: Middleware
      #   metadata:
      #     name: ip-filter
      #   spec:
      #     ipAllowList:
      #       sourceRange: "{{ ip_range }}"

# - name: Get an existing Service object
#   kubernetes.core.k8s_info:
#     kubeconfig: "{{ k8s_admin_config_path }}"
#     kind: Service
#     namespace: traefik
#     label_selectors:
#       - app.kubernetes.io/name=traefik
#   register: web_service_info
#   until: web_service_info.resources[0].status.loadBalancer.ingress is iterable
#   delay: 3
#   retries: 30

- name: Get public DNS name
  delegate_to: localhost
  azure_rm_publicipaddress_info:
    resource_group: "{{ azure_node_resource_group }}"
    name: "{{ azure_resource_group }}"
  register: azure_public_ip_info

- debug:
    var: azure_public_ip_info.publicipaddresses[0].dns_settings.fqdn

