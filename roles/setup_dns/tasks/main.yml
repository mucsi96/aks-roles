- name: Get account info
  delegate_to: localhost
  azure.azcollection.azure_rm_account_info:
  register: azure_account_info

- set_fact:
    azure_subscription_id: "{{ azure_account_info.account_info.id }}"
    azure_tenant_id: "{{ azure_account_info.account_info.tenantId }}"

- name: Get AKS info
  delegate_to: localhost
  azure.azcollection.azure_rm_aks_info:
    name: "{{ azure_resource_group }}"
    resource_group: "{{ azure_resource_group }}"
  register: azure_aks_info

- set_fact:
    azure_node_resource_group: "{{ azure_aks_info.aks[0].node_resource_group }}"

- name: Create DNS zone
  delegate_to: localhost
  azure.azcollection.azure_rm_dnszone:
    resource_group: "{{ azure_resource_group }}"
    name: "{{ dns_zone }}"
  register: dns_zone_info

- name: Get public IP
  azure.azcollection.azure_rm_publicipaddress_info:
    resource_group: "{{ azure_node_resource_group }}"
    name: "{{ azure_resource_group }}"
  register: azure_public_ip_address

- name: Create DNS A record
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "{{ azure_resource_group }}"
    zone_name: "{{ dns_zone }}"
    record_type: A
    records:
      - entry: "{{ azure_public_ip_address.publicipaddresses[0].ip_address }}"

- name: Create widlcard DNS CNAME record
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "*.{{ azure_resource_group }}"
    zone_name: "{{ dns_zone }}"
    record_type: CNAME
    records:
      - entry: "{{ azure_resource_group }}.{{ dns_zone }}"

- name: Get DNS Zone Contributor Role Definition
  azure.azcollection.azure_rm_roledefinition_info:
    scope: "{{ dns_zone_info.state.id }}"
    role_name: "DNS Zone Contributor"
  register: azure_dns_zone_contributor_role_definition_info

- set_fact:
    azure_dns_zone_contributor_role_definition_id: "{{ azure_dns_zone_contributor_role_definition_info.roledefinitions[0].id }}"

- set_fact:
    azure_dns_challenge_application_secret: >-
      {{
        lookup('ansible.builtin.password', '/dev/null', length=50, seed='{{ azure_subscription_id }}-azure_dns_challenge_application_secret')
      }}

- name: Create dns challenge application
  delegate_to: localhost
  azure.azcollection.azure_rm_adapplication:
    tenant: "{{ azure_tenant_id }}"
    available_to_other_tenants: true
    display_name: dns-challenge
    credential_description: dns-challenge
    key_type: Password
    password: "{{ azure_dns_challenge_application_secret }}"
  when: dns_zone_info.changed

- name: Get dns challenge application info
  delegate_to: localhost
  azure.azcollection.azure_rm_adapplication_info:
    tenant: "{{ azure_tenant_id }}"
  register: azure_dns_challenge_application_info

- name: Find app_id by identifier URI
  set_fact:
    azure_dns_challenge_application_id: >-
      {{
        (azure_dns_challenge_application_info.applications
        | selectattr('app_display_name', 'contains', 'dns-challenge')
        | map(attribute='app_id')
        | list
        | first)
      }}

- name: Create dns challenge service principal
  delegate_to: localhost
  azure.azcollection.azure_rm_adserviceprincipal:
    tenant: "{{ azure_tenant_id }}"
    app_id: "{{ azure_dns_challenge_application_id }}"
  register: dns_challenge_service_principal

- name: Pause for 10 seconds
  ansible.builtin.pause:
    seconds: 10
  when: dns_challenge_service_principal.changed

- name: Get dns challenge service principal info
  delegate_to: localhost
  azure.azcollection.azure_rm_adserviceprincipal_info:
    tenant: "{{ azure_tenant_id }}"
    app_id: "{{ azure_dns_challenge_application_id }}"
  register: dns_challenge_service_principal_info

- name: Get node resource group info
  azure.azcollection.azure_rm_resourcegroup_info:
    name: "{{ azure_resource_group }}"
  register: azure_resource_group_info

- name: Set DNS Zone Contributor Role Assignment
  azure.azcollection.azure_rm_roleassignment:
    assignee_object_id: "{{ dns_challenge_service_principal_info.service_principals[0].object_id }}"
    role_definition_id: "{{ azure_dns_zone_contributor_role_definition_id }}"
    scope: "{{ azure_resource_group_info.resourcegroups[0].id }}"

- name: Create Azure secret folder
  delegate_to: localhost
  file:
    path: "{{ inventory_dir }}/.azure"
    state: directory
    mode: 0700

- name: Save the dns challenge application secret
  delegate_to: localhost
  copy:
    dest: "{{ inventory_dir }}/.azure/dns-challenge-application-secret.yml"
    content: |
      azure_subscription_id: {{ azure_subscription_id }}
      azure_tenant_id: {{ azure_tenant_id }}
      azure_dns_challenge_application_id: {{ azure_dns_challenge_application_id }}
      azure_dns_challenge_application_secret: "{{ azure_dns_challenge_application_secret }}"
    mode: 0600
